"use strict";function _toConsumableArray(n){return _arrayWithoutHoles(n)||_iterableToArray(n)||_unsupportedIterableToArray(n)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(n,t){if(n){if("string"==typeof n)return _arrayLikeToArray(n,t);var e=Object.prototype.toString.call(n).slice(8,-1);return"Map"===(e="Object"===e&&n.constructor?n.constructor.name:e)||"Set"===e?Array.from(n):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?_arrayLikeToArray(n,t):void 0}}function _iterableToArray(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}function _arrayWithoutHoles(n){if(Array.isArray(n))return _arrayLikeToArray(n)}function _arrayLikeToArray(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,r=new Array(t);e<t;e++)r[e]=n[e];return r}var cheerio=require("cheerio"),moment=require("moment");function postsChart(){for(var n=moment("2021-10"),t=moment(),e=new Map,r=n;r<=t;r+=864e5){var a=moment(r).format("YYYY-MM");e.has(a)||e.set(a,0)}hexo.locals.get("posts").forEach(function(n){n=n.date.format("YYYY-MM");e.has(n)&&e.set(n,e.get(n)+1)});var o=JSON.stringify(_toConsumableArray(e.keys())),n=JSON.stringify(_toConsumableArray(e.values()));return"\n  <script id=\"postsChart\">\n    var postsChart = echarts.init(document.getElementById('posts-chart'), 'light');\n    var postsOption = {\n      textStyle: {\n        color: '#FFF'\n      },\n      title: {\n        text: '文章发布统计图',\n        x: 'center',\n        textStyle: {\n          color: '#FFF'\n        }\n      },\n      tooltip: {\n        trigger: 'axis'\n      },\n      xAxis: {\n        name: '日期',\n        type: 'category',\n        axisTick: {\n          show: false\n        },\n        axisLine: {\n          show: true,\n          lineStyle: {\n            color: '#FFF'\n          }\n        },\n        data: ".concat(o,"\n      },\n      yAxis: {\n        name: '文章篇数',\n        type: 'value',\n        splitLine: {\n          show: false\n        },\n        axisTick: {\n          show: false\n        },\n        axisLine: {\n          show: true,\n          lineStyle: {\n            color: '#FFF'\n          }\n        }\n      },\n      series: [{\n        name: '文章篇数',\n        type: 'line',\n        smooth: true,\n        lineStyle: {\n            width: 0\n        },\n        showSymbol: false,\n        itemStyle: {\n          opacity: 1,\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n            offset: 0,\n            color: 'rgba(128, 255, 165)'\n          },\n          {\n            offset: 1,\n            color: 'rgba(1, 191, 236)'\n          }])\n        },\n        areaStyle: {\n          opacity: 1,\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n            offset: 0,\n            color: 'rgba(128, 255, 165)'\n          }, {\n            offset: 1,\n            color: 'rgba(1, 191, 236)'\n          }])\n        },\n        data: ").concat(n,",\n        markLine: {\n          data: [{\n            name: '平均值',\n            type: 'average'\n          }]\n        }\n      }]\n    };\n    postsChart.setOption(postsOption);\n    window.addEventListener(\"resize\", () => { \n      postsChart.resize();\n    });\n    <\/script>")}function tagsChart(n){var t=[];hexo.locals.get("tags").map(function(n){t.push({name:n.name,value:n.length})}),t.sort(function(n,t){return t.value-n.value});for(var e=Math.min(t.length,n)||t.length,r=[],a=[],o=0;o<e;o++)r.push(t[o].name),a.push(t[o].value);var i=JSON.stringify(r),n=JSON.stringify(a);return"\n  <script id=\"tagsChart\">\n    var tagsChart = echarts.init(document.getElementById('tags-chart'), 'light');\n    var tagsOption = {\n      textStyle: {\n        color: '#FFF'\n      },\n      title: {\n        text: 'Top ".concat(e," 标签统计图',\n        x: 'center',\n        textStyle: {\n          color: '#FFF'\n        }\n      },\n      tooltip: {},\n      xAxis: [{\n        name: '标签',\n        type: 'category',\n        axisTick: {\n          show: false\n        },\n        axisLine: {\n          show: true,\n          lineStyle: {\n            color: '#FFF'\n          }\n        },\n        data: ").concat(i,"\n      }],\n      yAxis: [{\n        name: '文章篇数',\n        type: 'value',\n        splitLine: {\n          show: false\n        },\n        axisTick: {\n          show: false\n        },\n        axisLine: {\n          show: true,\n          lineStyle: {\n            color: '#FFF'\n          }\n        }\n      }],\n      series: [{\n        name: '文章篇数',\n        type: 'bar',\n        data: ").concat(n,",\n        itemStyle: {\n          opacity: 1,\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n            offset: 0,\n            color: 'rgba(128, 255, 165)'\n          },\n          {\n            offset: 1,\n            color: 'rgba(1, 191, 236)'\n          }])\n        },\n        emphasis: {\n          itemStyle: {\n            opacity: 1,\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 0,\n              color: 'rgba(128, 255, 195)'\n            },\n            {\n              offset: 1,\n              color: 'rgba(1, 211, 255)'\n            }])\n          }\n        },\n        markLine: {\n          data: [{\n            name: '平均值',\n            type: 'average'\n          }]\n        }\n      }]\n    };\n    tagsChart.setOption(tagsOption);\n    window.addEventListener(\"resize\", () => { \n      tagsChart.resize();\n    });\n    <\/script>")}function categoriesChart(){var t=[];hexo.locals.get("categories").map(function(n){t.push({name:n.name,value:n.length})}),t.sort(function(n,t){return t.value-n.value});var n=JSON.stringify(t);return"\n  <script id=\"categoriesChart\">\n    var categoriesChart = echarts.init(document.getElementById('categories-chart'), 'light');\n    var categoriesOption = {\n      textStyle: {\n        color: '#FFF'\n      },\n      title: {\n        text: '文章分类统计图',\n        x: 'center',\n        textStyle: {\n          color: '#FFF'\n        }\n      },\n      legend: {\n        top: 'bottom',\n        textStyle: {\n          color: '#FFF'\n        }\n      },\n      tooltip: {\n        trigger: 'item',\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n      },\n      series: [{\n        name: '文章篇数',\n        type: 'pie',\n        radius: [30, 80],\n        center: ['50%', '50%'],\n        roseType: 'area',\n        label: {\n          formatter: \"{b} : {c} ({d}%)\"\n        },\n        data: ".concat(n,",\n        itemStyle: {\n          emphasis: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: 'rgba(255, 255, 255, 0.5)'\n          }\n        }\n      }]\n    };\n    categoriesChart.setOption(categoriesOption);\n    window.addEventListener(\"resize\", () => { \n      categoriesChart.resize();\n    });\n    <\/script>")}hexo.extend.filter.register("after_render:html",function(n){var t=cheerio.load(n),e=t("#posts-chart"),r=t("#tags-chart"),a=t("#categories-chart"),o=!1;return 0<e.length||0<r.length||0<a.length?(0<e.length&&0===t("#postsChart").length&&("true"===e.attr("data-encode")&&(o=!0),e.after(postsChart())),0<r.length&&0===t("#tagsChart").length&&("true"===r.attr("data-encode")&&(o=!0),r.after(tagsChart(r.attr("data-length")))),0<a.length&&0===t("#categoriesChart").length&&("true"===a.attr("data-encode")&&(o=!0),a.after(categoriesChart())),o?t.root().html().replace(/&amp;#/g,"&#"):t.root().html()):n},15);